(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{510:function(e,r,a){"use strict";a.r(r);a(312),a(310);var n=a(309),t={components:n,data:function(){return{scale:1,waveOffset:0,waveAmp:.2,waveFreq:10,displayColor:0,vertexShader:"\n  uniform float waveOffset;\n  uniform float waveAmp;\n  uniform float waveFreq;\n\n  varying vec4 vCartesian;\n  varying vec4 vSpherical;\n\n  void main() {\n    float r = length(position);\n    float theta = acos(position.y / r); // inclination\n    float phi = atan(position.z, position.x); // azimuth\n\n    float finalR = r + sin((theta + waveOffset) * waveFreq) * waveAmp;\n    vec4 finalPos = vec4(\n      finalR * sin(theta) * cos(phi),\n      finalR * cos(theta),\n      finalR * sin(theta) * sin(phi),\n      1.0 / SCALE\n    );\n\n    gl_Position = projectionMatrix * modelViewMatrix * finalPos;\n\n    const float PI = 3.141592654;\n    vCartesian = finalPos;\n    vSpherical = vec4( // normalize values to [0, 1]\n      r,\n      theta / PI,\n      ((phi / PI) + 1.0) / 2.0,\n      1.0\n    );\n  }\n",fragmentShader:"\n  uniform int displayColor;\n\n  varying vec4 vSpherical;\n  varying vec4 vCartesian;\n\n  void main() {\n    if (displayColor == COLOR_CARTESIAN) {\n      gl_FragColor = vCartesian;\n    } else if (displayColor == COLOR_SPHERICAL) {\n      gl_FragColor = vSpherical;\n    } else if (displayColor == COLOR_DEPTH) {\n      float depth = gl_FragCoord.z * gl_FragCoord.w;\n      gl_FragColor = vec4(vec3(depth), 1.0);\n    }\n  }\n",vertShaderShown:!1,fragShaderShown:!1,wireframe:!0}},computed:{defines:function(){return{COLOR_CARTESIAN:0,COLOR_SPHERICAL:1,COLOR_DEPTH:2,SCALE:Number.isInteger(this.scale)?"".concat(this.scale,".0"):this.scale}},uniforms:function(){return{waveOffset:{value:this.waveOffset},waveAmp:{value:this.waveAmp},waveFreq:{value:this.waveFreq},displayColor:{value:this.displayColor}}}}},o=a(40),i=Object(o.a)(t,(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("div",[a("vgl-renderer",{attrs:{antialias:""},scopedSlots:e._u([{key:"scene",fn:function(){return[a("vgl-scene",[a("vgl-mesh",{scopedSlots:e._u([{key:"geometry",fn:function(){return[a("vgl-icosahedron-geometry",{attrs:{radius:1,detail:5}})]},proxy:!0},{key:"material",fn:function(){return[a("vgl-shader-material",{attrs:{wireframe:e.wireframe,defines:e.defines,uniforms:e.uniforms,"vertex-shader":e.vertexShader,"fragment-shader":e.fragmentShader}})]},proxy:!0}])})],1)]},proxy:!0},{key:"camera",fn:function(){return[a("vgl-perspective-camera",{attrs:{position:"spherical","position-radius":5,"position-phi":.8,"position-theta":.2,rotation:"lookAt"}})]},proxy:!0}])}),e._v(" "),a("aside",{staticClass:"control-panel"},[a("section",[a("h3",[e._v("Shaders")]),e._v(" "),a("label",[e._v("\n        Vertex Shader "),a("button",{on:{click:function(r){e.vertShaderShown=!e.vertShaderShown}}},[e._v("\n          "+e._s(e.vertShaderShown?"Hide":"Show")+"\n        ")]),e._v(" "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:e.vertShaderShown,expression:"vertShaderShown"},{name:"model",rawName:"v-model",value:e.vertexShader,expression:"vertexShader"}],attrs:{rows:"14",cols:"50"},domProps:{value:e.vertexShader},on:{input:function(r){r.target.composing||(e.vertexShader=r.target.value)}}})]),e._v(" "),a("label",[e._v("\n        Fragment Shader "),a("button",{on:{click:function(r){e.fragShaderShown=!e.fragShaderShown}}},[e._v("\n          "+e._s(e.fragShaderShown?"Hide":"Show")+"\n        ")]),e._v(" "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:e.fragShaderShown,expression:"fragShaderShown"},{name:"model",rawName:"v-model",value:e.fragmentShader,expression:"fragmentShader"}],attrs:{rows:"14",cols:"50"},domProps:{value:e.fragmentShader},on:{input:function(r){r.target.composing||(e.fragmentShader=r.target.value)}}})])]),e._v(" "),a("section",[a("h3",[e._v("Vert Shader Uniforms")]),e._v(" "),a("table",[a("tr",[a("td",[e._v("Offset")]),a("td",[a("input",{directives:[{name:"model",rawName:"v-model.number",value:e.waveOffset,expression:"waveOffset",modifiers:{number:!0}}],attrs:{type:"range",max:"2",step:"0.01"},domProps:{value:e.waveOffset},on:{__r:function(r){e.waveOffset=e._n(r.target.value)},blur:function(r){return e.$forceUpdate()}}})])]),e._v(" "),a("tr",[a("td",[e._v("Amplitude")]),a("td",[a("input",{directives:[{name:"model",rawName:"v-model.number",value:e.waveAmp,expression:"waveAmp",modifiers:{number:!0}}],attrs:{type:"range",max:"2",step:"0.01"},domProps:{value:e.waveAmp},on:{__r:function(r){e.waveAmp=e._n(r.target.value)},blur:function(r){return e.$forceUpdate()}}})])]),e._v(" "),a("tr",[a("td",[e._v("Frequency")]),a("td",[a("input",{directives:[{name:"model",rawName:"v-model.number",value:e.waveFreq,expression:"waveFreq",modifiers:{number:!0}}],attrs:{type:"range",max:"50"},domProps:{value:e.waveFreq},on:{__r:function(r){e.waveFreq=e._n(r.target.value)},blur:function(r){return e.$forceUpdate()}}})])])]),e._v(" "),a("label",[a("h3",[e._v("Frag Shader Uniforms")]),e._v("\n        Frag Color\n        "),a("select",{directives:[{name:"model",rawName:"v-model.number",value:e.displayColor,expression:"displayColor",modifiers:{number:!0}}],on:{change:function(r){var a=Array.prototype.filter.call(r.target.options,(function(e){return e.selected})).map((function(r){var a="_value"in r?r._value:r.value;return e._n(a)}));e.displayColor=r.target.multiple?a:a[0]}}},[a("option",{attrs:{value:"0",selected:""}},[e._v("Cartesian")]),e._v(" "),a("option",{attrs:{value:"1"}},[e._v("Spherical")]),e._v(" "),a("option",{attrs:{value:"2"}},[e._v("Depth")])])]),e._v(" "),a("label",[a("h3",[e._v("Defines")]),e._v("\n        Scale\n        "),a("input",{directives:[{name:"model",rawName:"v-model.number",value:e.scale,expression:"scale",modifiers:{number:!0}}],attrs:{type:"range",min:"0.2",step:"0.1",max:"10"},domProps:{value:e.scale},on:{__r:function(r){e.scale=e._n(r.target.value)},blur:function(r){return e.$forceUpdate()}}})]),e._v(" "),a("label",[a("h3",[e._v("Options")]),e._v("\n        Wireframe\n        "),a("input",{directives:[{name:"model",rawName:"v-model",value:e.wireframe,expression:"wireframe"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.wireframe)?e._i(e.wireframe,null)>-1:e.wireframe},on:{change:function(r){var a=e.wireframe,n=r.target,t=!!n.checked;if(Array.isArray(a)){var o=e._i(a,null);n.checked?o<0&&(e.wireframe=a.concat([null])):o>-1&&(e.wireframe=a.slice(0,o).concat(a.slice(o+1)))}else e.wireframe=t}}})])])])],1)}),[],!1,null,null,null);r.default=i.exports}}]);